{"ast":null,"code":"'use strict'; // install ES6 Promise polyfill\n\nrequire('./promise');\n\nvar interceptor = require('rest/interceptor');\n\nvar linkParser = require('rest/parsers/rfc5988');\n\nvar url = require('url');\n\nvar querystring = require('querystring');\n\nvar paginator = interceptor({\n  success: function (response, config) {\n    var link = response && response.headers && response.headers.Link;\n    var client = response && response.request && response.request.originator;\n\n    if (link) {\n      var nextLink = linkParser.parse(link).filter(function (link) {\n        return link.rel === 'next';\n      })[0];\n\n      if (nextLink) {\n        response.nextPage = function (callback) {\n          var linkParts = url.parse(nextLink.href);\n          var linkQuery = querystring.parse(linkParts.query);\n          linkQuery.access_token = linkQuery.access_token || config.access_token;\n          linkParts.search = querystring.stringify(linkQuery);\n          return client({\n            path: url.format(linkParts),\n            callback: callback\n          });\n        };\n      }\n    }\n\n    return response;\n  }\n});\nmodule.exports = paginator;","map":{"version":3,"sources":["/Users/HHJ/Dropbox/Class/2021/DSCI554/Github/project-datadocs/demo/node_modules/mapbox/lib/paginator.js"],"names":["require","interceptor","linkParser","url","querystring","paginator","success","response","config","link","headers","Link","client","request","originator","nextLink","parse","filter","rel","nextPage","callback","linkParts","href","linkQuery","query","access_token","search","stringify","path","format","module","exports"],"mappings":"AAAA,a,CAEA;;AACAA,OAAO,CAAC,WAAD,CAAP;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,aAAD,CAAzB;;AAEA,IAAIK,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,OAAO,EAAE,UAAUC,QAAV,EAAoBC,MAApB,EAA4B;AACnC,QAAIC,IAAI,GAAGF,QAAQ,IAAIA,QAAQ,CAACG,OAArB,IAAgCH,QAAQ,CAACG,OAAT,CAAiBC,IAA5D;AACA,QAAIC,MAAM,GAAGL,QAAQ,IAAIA,QAAQ,CAACM,OAArB,IAAgCN,QAAQ,CAACM,OAAT,CAAiBC,UAA9D;;AAEA,QAAIL,IAAJ,EAAU;AACR,UAAIM,QAAQ,GAAGb,UAAU,CAACc,KAAX,CAAiBP,IAAjB,EAAuBQ,MAAvB,CAA8B,UAAUR,IAAV,EAAgB;AAC3D,eAAOA,IAAI,CAACS,GAAL,KAAa,MAApB;AACD,OAFc,EAEZ,CAFY,CAAf;;AAIA,UAAIH,QAAJ,EAAc;AACZR,QAAAA,QAAQ,CAACY,QAAT,GAAoB,UAAUC,QAAV,EAAoB;AACtC,cAAIC,SAAS,GAAGlB,GAAG,CAACa,KAAJ,CAAUD,QAAQ,CAACO,IAAnB,CAAhB;AACA,cAAIC,SAAS,GAAGnB,WAAW,CAACY,KAAZ,CAAkBK,SAAS,CAACG,KAA5B,CAAhB;AACAD,UAAAA,SAAS,CAACE,YAAV,GAAyBF,SAAS,CAACE,YAAV,IAA0BjB,MAAM,CAACiB,YAA1D;AACAJ,UAAAA,SAAS,CAACK,MAAV,GAAmBtB,WAAW,CAACuB,SAAZ,CAAsBJ,SAAtB,CAAnB;AACA,iBAAOX,MAAM,CAAC;AACZgB,YAAAA,IAAI,EAAEzB,GAAG,CAAC0B,MAAJ,CAAWR,SAAX,CADM;AAEZD,YAAAA,QAAQ,EAAEA;AAFE,WAAD,CAAb;AAID,SATD;AAUD;AACF;;AAED,WAAOb,QAAP;AACD;AAzByB,CAAD,CAA3B;AA4BAuB,MAAM,CAACC,OAAP,GAAiB1B,SAAjB","sourcesContent":["'use strict';\n\n// install ES6 Promise polyfill\nrequire('./promise');\n\nvar interceptor = require('rest/interceptor');\nvar linkParser = require('rest/parsers/rfc5988');\nvar url = require('url');\nvar querystring = require('querystring');\n\nvar paginator = interceptor({\n  success: function (response, config) {\n    var link = response && response.headers && response.headers.Link;\n    var client = response && response.request && response.request.originator;\n\n    if (link) {\n      var nextLink = linkParser.parse(link).filter(function (link) {\n        return link.rel === 'next';\n      })[0];\n\n      if (nextLink) {\n        response.nextPage = function (callback) {\n          var linkParts = url.parse(nextLink.href);\n          var linkQuery = querystring.parse(linkParts.query);\n          linkQuery.access_token = linkQuery.access_token || config.access_token;\n          linkParts.search = querystring.stringify(linkQuery);\n          return client({\n            path: url.format(linkParts),\n            callback: callback\n          });\n        };\n      }\n    }\n\n    return response;\n  }\n});\n\nmodule.exports = paginator;\n"]},"metadata":{},"sourceType":"script"}