{"ast":null,"code":"/* eslint-disable */\n\n/*\n * hat\n * written by James Halliday, licensed under MIT/X11\n * https://github.com/substack/node-hat\n */\nvar hat = module.exports = function (bits, base) {\n  if (!base) base = 16;\n  if (bits === undefined) bits = 128;\n  if (bits <= 0) return '0';\n  var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n\n  for (var i = 2; digits === Infinity; i *= 2) {\n    digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n  }\n\n  var rem = digits - Math.floor(digits);\n  var res = '';\n\n  for (var i = 0; i < Math.floor(digits); i++) {\n    var x = Math.floor(Math.random() * base).toString(base);\n    res = x + res;\n  }\n\n  if (rem) {\n    var b = Math.pow(base, rem);\n    var x = Math.floor(Math.random() * b).toString(base);\n    res = x + res;\n  }\n\n  var parsed = parseInt(res, base);\n\n  if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n    return hat(bits, base);\n  } else return res;\n};","map":{"version":3,"sources":["/Users/carlin/Desktop/USC_classes/DSCI_554/project-datadocs-real/demo/node_modules/mapbox/vendor/hat.js"],"names":["hat","module","exports","bits","base","undefined","digits","Math","log","pow","i","Infinity","rem","floor","res","x","random","toString","b","parsed","parseInt"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,GAAG,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC7C,MAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AACX,MAAID,IAAI,KAAKE,SAAb,EAAwBF,IAAI,GAAG,GAAP;AACxB,MAAIA,IAAI,IAAI,CAAZ,EAAe,OAAO,GAAP;AAEf,MAAIG,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYN,IAAZ,CAAT,IAA8BI,IAAI,CAACC,GAAL,CAASJ,IAAT,CAA3C;;AACA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBJ,MAAM,KAAKK,QAA3B,EAAqCD,CAAC,IAAI,CAA1C,EAA6C;AACzCJ,IAAAA,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYN,IAAI,GAAGO,CAAnB,CAAT,IAAkCH,IAAI,CAACC,GAAL,CAASJ,IAAT,CAAlC,GAAmDM,CAA5D;AACH;;AAED,MAAIE,GAAG,GAAGN,MAAM,GAAGC,IAAI,CAACM,KAAL,CAAWP,MAAX,CAAnB;AAEA,MAAIQ,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACM,KAAL,CAAWP,MAAX,CAApB,EAAwCI,CAAC,EAAzC,EAA6C;AACzC,QAAIK,CAAC,GAAGR,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACS,MAAL,KAAgBZ,IAA3B,EAAiCa,QAAjC,CAA0Cb,IAA1C,CAAR;AACAU,IAAAA,GAAG,GAAGC,CAAC,GAAGD,GAAV;AACH;;AAED,MAAIF,GAAJ,EAAS;AACL,QAAIM,CAAC,GAAGX,IAAI,CAACE,GAAL,CAASL,IAAT,EAAeQ,GAAf,CAAR;AACA,QAAIG,CAAC,GAAGR,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACS,MAAL,KAAgBE,CAA3B,EAA8BD,QAA9B,CAAuCb,IAAvC,CAAR;AACAU,IAAAA,GAAG,GAAGC,CAAC,GAAGD,GAAV;AACH;;AAED,MAAIK,MAAM,GAAGC,QAAQ,CAACN,GAAD,EAAMV,IAAN,CAArB;;AACA,MAAIe,MAAM,KAAKR,QAAX,IAAuBQ,MAAM,IAAIZ,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYN,IAAZ,CAArC,EAAwD;AACpD,WAAOH,GAAG,CAACG,IAAD,EAAOC,IAAP,CAAV;AACH,GAFD,MAGK,OAAOU,GAAP;AACR,CA9BD","sourcesContent":["/* eslint-disable */\n/*\n * hat\n * written by James Halliday, licensed under MIT/X11\n * https://github.com/substack/node-hat\n */\nvar hat = module.exports = function (bits, base) {\n    if (!base) base = 16;\n    if (bits === undefined) bits = 128;\n    if (bits <= 0) return '0';\n    \n    var digits = Math.log(Math.pow(2, bits)) / Math.log(base);\n    for (var i = 2; digits === Infinity; i *= 2) {\n        digits = Math.log(Math.pow(2, bits / i)) / Math.log(base) * i;\n    }\n    \n    var rem = digits - Math.floor(digits);\n    \n    var res = '';\n    \n    for (var i = 0; i < Math.floor(digits); i++) {\n        var x = Math.floor(Math.random() * base).toString(base);\n        res = x + res;\n    }\n    \n    if (rem) {\n        var b = Math.pow(base, rem);\n        var x = Math.floor(Math.random() * b).toString(base);\n        res = x + res;\n    }\n    \n    var parsed = parseInt(res, base);\n    if (parsed !== Infinity && parsed >= Math.pow(2, bits)) {\n        return hat(bits, base)\n    }\n    else return res;\n};\n"]},"metadata":{},"sourceType":"script"}