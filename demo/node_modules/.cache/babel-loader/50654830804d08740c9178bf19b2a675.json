{"ast":null,"code":"'use strict'; // install ES6 Promise polyfill\n\nrequire('./promise');\n\nvar interceptor = require('rest/interceptor');\n\nvar callbackify = interceptor({\n  success: function (response) {\n    var callback = response && response.callback;\n\n    if (typeof callback === 'function') {\n      callback(null, response.entity, response);\n    }\n\n    return response;\n  },\n  error: function (response) {\n    var callback = response && response.callback;\n\n    if (typeof callback === 'function') {\n      var err = response.error || response.entity;\n      if (typeof err !== 'object') err = new Error(err);\n      callback(err);\n    }\n\n    return response;\n  }\n});\nmodule.exports = callbackify;","map":{"version":3,"sources":["/Users/HHJ/Dropbox/Class/2021/DSCI554/Github/project-datadocs/demo/node_modules/mapbox/lib/callbackify.js"],"names":["require","interceptor","callbackify","success","response","callback","entity","error","err","Error","module","exports"],"mappings":"AAAA,a,CAEA;;AACAA,OAAO,CAAC,WAAD,CAAP;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAIE,WAAW,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,OAAO,EAAE,UAAUC,QAAV,EAAoB;AAC3B,QAAIC,QAAQ,GAAGD,QAAQ,IAAIA,QAAQ,CAACC,QAApC;;AAEA,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,MAAAA,QAAQ,CAAC,IAAD,EAAOD,QAAQ,CAACE,MAAhB,EAAwBF,QAAxB,CAAR;AACD;;AAED,WAAOA,QAAP;AACD,GAT2B;AAU5BG,EAAAA,KAAK,EAAE,UAAUH,QAAV,EAAoB;AACzB,QAAIC,QAAQ,GAAGD,QAAQ,IAAIA,QAAQ,CAACC,QAApC;;AAEA,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,UAAIG,GAAG,GAAGJ,QAAQ,CAACG,KAAT,IAAkBH,QAAQ,CAACE,MAArC;AACA,UAAI,OAAOE,GAAP,KAAe,QAAnB,EAA6BA,GAAG,GAAG,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AAC7BH,MAAAA,QAAQ,CAACG,GAAD,CAAR;AACD;;AAED,WAAOJ,QAAP;AACD;AApB2B,CAAD,CAA7B;AAuBAM,MAAM,CAACC,OAAP,GAAiBT,WAAjB","sourcesContent":["'use strict';\n\n// install ES6 Promise polyfill\nrequire('./promise');\n\nvar interceptor = require('rest/interceptor');\n\nvar callbackify = interceptor({\n  success: function (response) {\n    var callback = response && response.callback;\n\n    if (typeof callback === 'function') {\n      callback(null, response.entity, response);\n    }\n\n    return response;\n  },\n  error: function (response) {\n    var callback = response && response.callback;\n\n    if (typeof callback === 'function') {\n      var err = response.error || response.entity;\n      if (typeof err !== 'object') err = new Error(err);\n      callback(err);\n    }\n\n    return response;\n  }\n});\n\nmodule.exports = callbackify;\n"]},"metadata":{},"sourceType":"script"}